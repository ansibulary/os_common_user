---
# User consistency
# required param: "username" (string)
# manages: group_vars/all/common_users

- name: Common users known
  copy:
    dest: "{{ playbook_dir }}/group_vars/all/common_users"
    content: "common_users{{':'}}\n{% for user in users_known %}\n  - {{ user|to_yaml }}{% endfor %}\n"
    mode: 0660
    group: "{{ ops.group|default(ansible_user_gid) }}"
  register: common_users_copy
  when: common_users is not defined

- name: User cache refreshed
  when: common_users_copy is changed
  include_vars: "{{ playbook_dir }}/group_vars/all/common_users"

# Increment max known uid, gid defaults to uid, nonscalars default to username
- name: Users known
  set_fact:
    user:
      { id: "{{ username }}",

        gecos: "{{ (common_users|json_query(gecos_query) == []) |ternary(
                       username,
                       (common_users|json_query(gecos_query)).0 ) }}",

        uid: "{{ ((common_users|json_query(uid_query)) == []) |ternary(
                   (common_users|json_query('[].uid')|max|int + 1),
                   (common_users|json_query(uid_query)).0 ) }}",

        gid: "{{ ((common_users|json_query(gid_query)) == []) |ternary(
                   ((common_users|json_query(uid_query)) == []) |ternary(
                     (common_users|json_query('[].uid')|max|int + 1),
                     (common_users|json_query(uid_query)).0),
                   (common_users|json_query(gid_query)).0  ) }}",

        group: "{{ ((common_users|json_query(group_query)) == []) |ternary(
                     username,
                     (common_users|json_query(group_query)).0 ) }}"
      }
  vars:
    gecos_query: "[?id=='{{ username }}'].gecos"
    uid_query: "[?id=='{{ username }}'].uid"
    gid_query: "[?id=='{{ username }}'].gid"
    group_query: "[?id=='{{ username }}'].group"

# Write to vars file with shared group ownership
- name: User saved
  lineinfile:
    dest: "{{ playbook_dir }}/group_vars/all/common_users"
    line: "  - {{ user|to_yaml }}"
    regexp: ".* id:( ){{ username }}[,}]"
    create: true
    mode: 0660
    group: "{{ ops.group|default(ansible_user_gid) }}"
  with_items:
    - "{{ username }}"

- name: User group exists
  become: "{{ ansible_user_uid != 0 }}"
  group:
    name: "{{ user.group }}"
    gid: "{{ user.gid }}"
  with_items:
    - "{{ user.group }}"

- name: User account exists
  become: "{{ ansible_user_uid != 0 }}"
  user:
    name: "{{ username }}"
    comment: "{{ user.gecos }}"
    uid: "{{ user.uid }}"
    group: "{{ user.group }}"
    password: "{{ (lookup('password', ops.key_dir + '/users/' + username + '/password'))|password_hash('sha512', ops.salt ) }}"
  with_items:
    - "{{ username }}"
